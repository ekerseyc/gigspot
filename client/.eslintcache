[{"/Users/benzah/Documents/bootcamp/gigspot/client/src/index.js":"1","/Users/benzah/Documents/bootcamp/gigspot/client/src/reportWebVitals.js":"2","/Users/benzah/Documents/bootcamp/gigspot/client/src/App.js":"3","/Users/benzah/Documents/bootcamp/gigspot/client/src/pages/Profile.js":"4","/Users/benzah/Documents/bootcamp/gigspot/client/src/pages/Login.js":"5","/Users/benzah/Documents/bootcamp/gigspot/client/src/pages/Post.js":"6","/Users/benzah/Documents/bootcamp/gigspot/client/src/pages/Apply.js":"7","/Users/benzah/Documents/bootcamp/gigspot/client/src/pages/Signup.js":"8","/Users/benzah/Documents/bootcamp/gigspot/client/src/pages/Home.js":"9","/Users/benzah/Documents/bootcamp/gigspot/client/src/components/Footer/index.js":"10","/Users/benzah/Documents/bootcamp/gigspot/client/src/components/Header/index.js":"11","/Users/benzah/Documents/bootcamp/gigspot/client/src/components/Mission/index.js":"12","/Users/benzah/Documents/bootcamp/gigspot/client/src/utils/auth.js":"13","/Users/benzah/Documents/bootcamp/gigspot/client/src/utils/queries.js":"14","/Users/benzah/Documents/bootcamp/gigspot/client/src/utils/mutations.js":"15","/Users/benzah/Documents/bootcamp/gigspot/client/src/components/SearchList/index.js":"16","/Users/benzah/Documents/bootcamp/gigspot/client/src/components/UserList/index.js":"17","/Users/benzah/Documents/bootcamp/gigspot/client/src/components/SearchForm/index.js":"18","/Users/benzah/Documents/bootcamp/gigspot/client/src/components/Navbar/index.js":"19"},{"size":500,"mtime":1651511938642,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1651511938642,"results":"22","hashOfConfig":"21"},{"size":2073,"mtime":1652038902040,"results":"23","hashOfConfig":"21"},{"size":2741,"mtime":1652038902043,"results":"24","hashOfConfig":"21"},{"size":2637,"mtime":1651963778021,"results":"25","hashOfConfig":"21"},{"size":2993,"mtime":1652038902043,"results":"26","hashOfConfig":"21"},{"size":2205,"mtime":1652038902042,"results":"27","hashOfConfig":"21"},{"size":3275,"mtime":1652038902043,"results":"28","hashOfConfig":"21"},{"size":1524,"mtime":1652038902042,"results":"29","hashOfConfig":"21"},{"size":639,"mtime":1652040537642,"results":"30","hashOfConfig":"21"},{"size":670,"mtime":1651976524682,"results":"31","hashOfConfig":"21"},{"size":1527,"mtime":1651949059176,"results":"32","hashOfConfig":"21"},{"size":1043,"mtime":1651511938643,"results":"33","hashOfConfig":"21"},{"size":708,"mtime":1651944854734,"results":"34","hashOfConfig":"21"},{"size":1063,"mtime":1652038902043,"results":"35","hashOfConfig":"21"},{"size":2691,"mtime":1652038902042,"results":"36","hashOfConfig":"21"},{"size":520,"mtime":1651850589490,"results":"37","hashOfConfig":"21"},{"size":2683,"mtime":1652038902041,"results":"38","hashOfConfig":"21"},{"size":1251,"mtime":1651964748345,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1ypjwyp",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/benzah/Documents/bootcamp/gigspot/client/src/index.js",[],["85","86"],"/Users/benzah/Documents/bootcamp/gigspot/client/src/reportWebVitals.js",[],"/Users/benzah/Documents/bootcamp/gigspot/client/src/App.js",[],"/Users/benzah/Documents/bootcamp/gigspot/client/src/pages/Profile.js",["87","88"],"// Node Modules\nimport React from \"react\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\n// Utilities\nimport Auth from \"../utils/auth\";\nimport { QUERY_USERS, QUERY_USER, QUERY_ME } from \"../utils/queries\";\n// Components\nimport UserList from \"../components/UserList\";\nimport styled from 'styled-components';\nimport SearchList from \"../components/SearchList\";\nimport {  GoLocation } from 'react-icons/go';\n\n// styled const\nconst ProfileWrapper = styled.div`\ndisplay: flex;\nflex-wrap: wrap;\njustify-content: space-around;\npadding: 10px;\n`;\n\nconst ProfileDiv = styled.div`\nbackground: #76A7F4;\nbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\nborder-radius: 10px;\nwidth: 50%;\nheight: 50%;\npadding: 10px;\n`;\n\nconst UL = styled.ul`\nlist-style: none;\ncolor: white;\n`;\n\nconst Username = styled.li`\nfont-size: x-large;\nfont-weight: bold;\n`;\n\nconst H2 = styled.h2`\ntext-align: center;\npadding-top: 10px;\n`;\n\nconst Email = styled.li`\nfont-style: italic;\n`;\n\nconst H3 = styled.h3`\ntext-align: center;\npadding-top: 10px;\ncolor: white;\nfont-weight: lighter;\n`;\n\nconst Profile = () => {\n  const { id } = useParams();\n  console.log(id);\n\n  // Get current user\n  const queryToRun = id ? QUERY_USER : QUERY_ME;\n  const { loading, error, data } = useQuery(queryToRun, {\n    variables: { _id: id },\n  });\n\n  // Get a list of all users\n  const { usersLoading, data: usersData } = useQuery(QUERY_USERS);\n  console.log(usersData);\n\n  const user = data?.me || data?.user || {};\n \n  const users = data?.users || [];\n\n  if (error) console.log(error);\n\n  // redirect to personal profile page if username is yours\n  if (Auth.loggedIn() && Auth.getProfile().data._id === id) {\n    return <Navigate to=\"/me\" replace />;\n  }\n\n  if (loading) {\n    return <h4>Loading...</h4>;\n  }\n\n  if (id && !user?.username) {\n    return (\n      <h4>\n        {/* You need to be logged in to see this. Use the navigation links above to\n        sign up or log in! */}\n        User not found!\n      </h4>\n    );\n  }\n\n  const renderCurrentUserInfo = () => {\n    if (!users || !user) return <p>Not Found</p>;\n    return (\n      <>\n        <UL>\n          <Username>{user.username}</Username>\n          <Email>{user.email}</Email>\n          <li><GoLocation /> {user.location}</li>\n          <li>Info: {user.description}</li>\n        </UL>\n        <div>\n          <H3>Your Posts:</H3>\n          {user.posts?.length > 0 && <SearchList posts={user.posts} />}\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <div>\n      <H2>Viewing {users? `${user.username}'s` : \"your\"} profile.</H2>\n    <ProfileWrapper>\n      <ProfileDiv>\n        {renderCurrentUserInfo()}\n      </ProfileDiv>\n    </ProfileWrapper>\n    </div>\n  );\n};\n\nexport default Profile;\n","/Users/benzah/Documents/bootcamp/gigspot/client/src/pages/Login.js",[],"/Users/benzah/Documents/bootcamp/gigspot/client/src/pages/Post.js",["89"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { CREATE_POST } from \"../utils/mutations\";\nimport styled from \"styled-components\";\n\n// import Auth from '../utils/auth';\n\n// styled const\nconst PostWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  padding: 10px;\n`;\n\nconst PostDiv = styled.div`\n  background: #f9f9f9;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  border-radius: 10px;\n  width: 50%;\n  height: 50%;\n  padding: 10px;\n`;\n\nconst H3 = styled.h3`\n  text-align: center;\n  padding-top: 10px;\n`;\n\nconst NameInput = styled.input`\n  width: 100%;\n  padding: 12px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  resize: vertical;\n`;\n\nconst CatInput = styled.input`\n  width: 100%;\n  padding: 12px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  resize: vertical;\n  margin-top: 10px;\n`;\n\nconst DescInput = styled.input`\n  width: 100%;\n  padding: 12px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  resize: vertical;\n  margin-top: 10px;\n`;\n\nconst SubmitBtn = styled.button`\n  background: #6ebeed;\n  font-size: large;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 4px;\n  margin-top: 10px;\n  float: right;\n`;\n\nconst PostForm = () => {\n  const [formState, setFormState] = useState({\n    author: \"\",\n    description: \"\",\n    category: \"\",\n  });\n\n  const [createPost, { error, data }] = useMutation(CREATE_POST);\n  console.log(\"here\", data);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await createPost({\n        variables: { ...formState },\n      });\n      console.log(data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  if (data) {\n    return (\n      <p>\n        Success! You may now head <Link to=\"/\">back to the homepage.</Link>\n      </p>\n    );\n  }\n\n  return (\n    <main>\n      <H3>Post a gig</H3>\n      <PostWrapper>\n        <PostDiv>\n          <form onSubmit={handleFormSubmit}>\n            <div>\n              <NameInput\n                placeholder=\"Name...\"\n                name=\"author\"\n                value={formState.author}\n                onChange={handleChange}\n              />\n              <CatInput\n                placeholder=\"Category...\"\n                name=\"category\"\n                value={formState.category}\n                onChange={handleChange}\n              />\n              <DescInput\n                placeholder=\"Description (date, time, etc)...\"\n                name=\"description\"\n                value={formState.description}\n                onChange={handleChange}\n              />\n              <SubmitBtn type=\"submit\">Submit</SubmitBtn>\n            </div>\n          </form>\n        </PostDiv>\n      </PostWrapper>\n    </main>\n  );\n};\n\nexport default PostForm;\n","/Users/benzah/Documents/bootcamp/gigspot/client/src/pages/Apply.js",["90"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { APPLY_GIG } from '../utils/mutations';\nimport styled from 'styled-components';\n\n// import Auth from '../utils/auth';\n\n// styled const\nconst PostWrapper = styled.div`\ndisplay: flex;\nflex-wrap: wrap;\njustify-content: space-around;\npadding: 10px;\n`;\n\nconst PostDiv = styled.div`\nbackground: #F9F9F9;\nbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\nborder-radius: 10px;\nwidth: 50%;\nheight: 50%;\npadding: 10px;\n`;\n\nconst H3 = styled.h3`\ntext-align: center;\npadding-top: 10px;\n`;\n\nconst Message = styled.textarea`\nwidth: 100%;\n  padding: 12px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  resize: vertical;\n  `;\n\nconst SubmitBtn = styled.button`\nbackground: #6EBEED;\n font-size: large;\n color: white;\n padding: 10px 20px;\n border: none;\n border-radius: 4px;\n margin-top: 10px;\n float: right;\n`;\n\nconst ApplyGig = () => {\n  const [formState, setFormState] = useState({\n    description: ''\n  });\n\n  const [applyGig, { error, data }] = useMutation(APPLY_GIG);\n  console.log('here', data);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await applyGig({\n        variables: { ...formState },\n      })\n      console.log(data)\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  if (data) {\n    return (\n    <p>\n      Success! You may now head{' '}\n      <Link to=\"/\">back to the homepage.</Link>\n    </p>\n    )\n  } \n\n  return (\n    <main>\n      <H3>Apply to Gig</H3>\n      <PostWrapper>\n        <PostDiv>\n\n      <form onSubmit={handleFormSubmit}>\n        \n        <div>\n          <Message\n            placeholder=\"Write a message here!\"\n            name=\"description\"\n            value={formState.author}\n            onChange={handleChange}\n            />\n          <SubmitBtn type=\"submit\">\n            Submit\n          </SubmitBtn>\n        </div>\n      </form>\n            </PostDiv>\n            </PostWrapper>\n    </main>\n  );\n};\n\nexport default ApplyGig;","/Users/benzah/Documents/bootcamp/gigspot/client/src/pages/Signup.js",[],"/Users/benzah/Documents/bootcamp/gigspot/client/src/pages/Home.js",["91","92","93","94"],"// Node Modules\nimport { useQuery } from \"@apollo/client\";\nimport React, { useState, useEffect } from \"react\";\n// Utilities\nimport Auth from \"../utils/auth\";\n// import { QUERY_USERS } from '../utils/queries';\nimport { QUERY_POSTS } from \"../utils/queries\";\n\n// Components\n\nimport UserList from \"../components/UserList\";\nimport Header from \"../components/Header\";\nimport Mission from \"../components/Mission\";\n\nimport SearchForm from \"../components/SearchForm\";\nimport SearchList from \"../components/SearchList\";\nimport Post from \"./Post\";\n\nconst Home = () => {\n  // const { loading, data } = useQuery(QUERY_USERS);\n  const { loading, data } = useQuery(QUERY_POSTS);\n  const posts = data?.post || [];\n  console.log('posts:', posts);\n\n  const [initialPosts, setInitialPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n\n  // Set both initial and filtered from what is given back from the query (all posts)\n  useEffect(() => {\n    setInitialPosts(posts);\n    setFilteredPosts(posts);\n  }, [posts]);\n\n  return (\n    <>\n      <main>\n        {!Auth.loggedIn() ? (\n          <div>\n            <Mission />\n          </div>\n        ) : (\n          <div>\n            <SearchForm\n              posts={initialPosts}\n              setFilteredPosts={setFilteredPosts}\n            />\n\n            {loading ? (\n              <div>Loading...</div>\n            ) : (\n              <SearchList posts={filteredPosts} />\n            )}\n          </div>\n        )}\n      </main>\n    </>\n  );\n};\n\nexport default Home;\n","/Users/benzah/Documents/bootcamp/gigspot/client/src/components/Footer/index.js",[],"/Users/benzah/Documents/bootcamp/gigspot/client/src/components/Header/index.js",[],"/Users/benzah/Documents/bootcamp/gigspot/client/src/components/Mission/index.js",[],"/Users/benzah/Documents/bootcamp/gigspot/client/src/utils/auth.js",[],"/Users/benzah/Documents/bootcamp/gigspot/client/src/utils/queries.js",[],"/Users/benzah/Documents/bootcamp/gigspot/client/src/utils/mutations.js",[],"/Users/benzah/Documents/bootcamp/gigspot/client/src/components/SearchList/index.js",[],"/Users/benzah/Documents/bootcamp/gigspot/client/src/components/UserList/index.js",["95"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SearchForm from '../SearchForm';\n\n// const User = ({ _id, username }) => {\n//   return (\n//     <div key={_id}>\n//       <h4>\n//         <Link to={`/users/${_id}`}>\n//           {username}\n//         </Link>\n//       </h4>\n//     </div>\n//   );\n// };\n\nconst UserList = ({ users, title }) => {\n  if (!users.length) return <h3>No Users</h3>;\n\n  return (\n    <>\n      <h3>{title}</h3>\n      <SearchForm />\n    </>\n  );\n};\n\nexport default UserList;\n","/Users/benzah/Documents/bootcamp/gigspot/client/src/components/SearchForm/index.js",["96"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\n// styled const\nconst H2 = styled.h2`\n  text-align: center;\n  padding-top: 10px;\n`;\n\nconst H3 = styled.h3`\n  text-align: center;\n  padding-bottom: 10px;\n`;\n\nconst SearchWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  padding: 10px;\n`;\n\nconst SearchDiv = styled.div`\n  background: #f9f9f9;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  border-radius: 10px;\n  width: 50%;\n  height: 50%;\n  padding: 10px;\n`;\n\nconst SearchInput = styled.input`\n  width: 100%;\n  padding: 12px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  resize: vertical;\n  font-size: large;\n`;\n\nconst SearchBtn = styled.button`\n  background: #6ebeed;\n  font-size: large;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 4px;\n  margin-top: 10px;\n  float: right;\n  &:focus {\n    background: white;\n    font-size: large;\n    color: #6ebeed;\n    padding: 10px 20px;\n    border: 1px solid #6ebeed;\n    border-radius: 4px;\n    margin-top: 10px;\n    float: right;\n  }\n`;\n\n/* \nTODO: Search by category \nTODO: Render posts by input category\nTODO: Include users and their rating\nTODO: The username is a link to their profile\nTODO: There is a button to request a booking\n*/\n\nfunction SearchForm({ posts, setFilteredPosts }) {\n  // Set state for the search result and the search query\n  const [input, setInput] = useState([]);\n\n  // Handler for what happens when the search form is submitted\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n    setInput(\"\");\n\n    if (input === \"\") {\n      setFilteredPosts(posts);\n      return;\n    }\n\n    // Filter posts by the category that is input in the search bar\n    console.log(\n      posts.filter(\n        (post) => post.category.toLowerCase() === input.toLowerCase()\n      )\n    );\n    setFilteredPosts(\n      posts.filter(\n        (post) => post.category.toLowerCase() === input.toLowerCase()\n      )\n    );\n  };\n\n  return (\n    <>\n      <H2 className=\"searchH2\">Find your next gig in the Carolinas!</H2>\n      <SearchWrapper>\n        <SearchDiv className=\"searchBox\">\n          <H3>I'm looking for...</H3>\n          <form className=\"searchForm\">\n            <SearchInput\n              value={input}\n              name=\"category\"\n              onChange={(event) => setInput(event.target.value)}\n              type=\"text\"\n              placeholder=\"Search by Category\"\n            />\n            <SearchBtn type=\"button\" onClick={handleFormSubmit}>\n              Submit\n            </SearchBtn>\n          </form>\n        </SearchDiv>\n      </SearchWrapper>\n    </>\n  );\n}\n\nexport default SearchForm;\n","/Users/benzah/Documents/bootcamp/gigspot/client/src/components/Navbar/index.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":9,"column":8,"nodeType":"103","messageId":"104","endLine":9,"endColumn":16},{"ruleId":"101","severity":1,"message":"105","line":68,"column":11,"nodeType":"103","messageId":"104","endLine":68,"endColumn":23},{"ruleId":"101","severity":1,"message":"106","line":75,"column":24,"nodeType":"103","messageId":"104","endLine":75,"endColumn":29},{"ruleId":"101","severity":1,"message":"106","line":55,"column":22,"nodeType":"103","messageId":"104","endLine":55,"endColumn":27},{"ruleId":"101","severity":1,"message":"102","line":11,"column":8,"nodeType":"103","messageId":"104","endLine":11,"endColumn":16},{"ruleId":"101","severity":1,"message":"107","line":12,"column":8,"nodeType":"103","messageId":"104","endLine":12,"endColumn":14},{"ruleId":"101","severity":1,"message":"108","line":17,"column":8,"nodeType":"103","messageId":"104","endLine":17,"endColumn":12},{"ruleId":"109","severity":1,"message":"110","line":22,"column":9,"nodeType":"111","endLine":22,"endColumn":33},{"ruleId":"101","severity":1,"message":"112","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":14},{"ruleId":"101","severity":1,"message":"113","line":1,"column":27,"nodeType":"103","messageId":"104","endLine":1,"endColumn":36},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'UserList' is defined but never used.","Identifier","unusedVar","'usersLoading' is assigned a value but never used.","'error' is assigned a value but never used.","'Header' is defined but never used.","'Post' is defined but never used.","react-hooks/exhaustive-deps","The 'posts' logical expression could make the dependencies of useEffect Hook (at line 32) change on every render. To fix this, wrap the initialization of 'posts' in its own useMemo() Hook.","VariableDeclarator","'Link' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]