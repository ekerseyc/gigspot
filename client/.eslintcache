[{"/Users/benzah/Documents/bootcamp/gigspot/client/src/index.js":"1","/Users/benzah/Documents/bootcamp/gigspot/client/src/App.js":"2","/Users/benzah/Documents/bootcamp/gigspot/client/src/reportWebVitals.js":"3","/Users/benzah/Documents/bootcamp/gigspot/client/src/pages/Home.js":"4","/Users/benzah/Documents/bootcamp/gigspot/client/src/pages/Signup.js":"5","/Users/benzah/Documents/bootcamp/gigspot/client/src/pages/Login.js":"6","/Users/benzah/Documents/bootcamp/gigspot/client/src/pages/Profile.js":"7","/Users/benzah/Documents/bootcamp/gigspot/client/src/pages/Post.js":"8","/Users/benzah/Documents/bootcamp/gigspot/client/src/components/Footer/index.js":"9","/Users/benzah/Documents/bootcamp/gigspot/client/src/components/Header/index.js":"10","/Users/benzah/Documents/bootcamp/gigspot/client/src/utils/queries.js":"11","/Users/benzah/Documents/bootcamp/gigspot/client/src/utils/auth.js":"12","/Users/benzah/Documents/bootcamp/gigspot/client/src/utils/mutations.js":"13","/Users/benzah/Documents/bootcamp/gigspot/client/src/components/UserList/index.js":"14","/Users/benzah/Documents/bootcamp/gigspot/client/src/components/SearchForm/index.js":"15","/Users/benzah/Documents/bootcamp/gigspot/client/src/components/Mission/index.js":"16","/Users/benzah/Documents/bootcamp/gigspot/client/src/components/SearchList/index.js":"17","/Users/benzah/Documents/bootcamp/gigspot/client/src/components/Navbar/index.js":"18"},{"size":500,"mtime":1651511938642,"results":"19","hashOfConfig":"20"},{"size":1876,"mtime":1651852966965,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1651511938642,"results":"22","hashOfConfig":"20"},{"size":1487,"mtime":1651852966992,"results":"23","hashOfConfig":"20"},{"size":1866,"mtime":1651511938642,"results":"24","hashOfConfig":"20"},{"size":1811,"mtime":1651511938642,"results":"25","hashOfConfig":"20"},{"size":2243,"mtime":1651858935867,"results":"26","hashOfConfig":"20"},{"size":1754,"mtime":1651858935866,"results":"27","hashOfConfig":"20"},{"size":514,"mtime":1651852966990,"results":"28","hashOfConfig":"20"},{"size":629,"mtime":1651852966991,"results":"29","hashOfConfig":"20"},{"size":700,"mtime":1651852966992,"results":"30","hashOfConfig":"20"},{"size":1043,"mtime":1651511938643,"results":"31","hashOfConfig":"20"},{"size":1213,"mtime":1651858935867,"results":"32","hashOfConfig":"20"},{"size":520,"mtime":1651850589490,"results":"33","hashOfConfig":"20"},{"size":1398,"mtime":1651858930539,"results":"34","hashOfConfig":"20"},{"size":1770,"mtime":1651852966991,"results":"35","hashOfConfig":"20"},{"size":2129,"mtime":1651860405906,"results":"36","hashOfConfig":"20"},{"size":832,"mtime":1651852966991,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1ypjwyp",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/benzah/Documents/bootcamp/gigspot/client/src/index.js",[],["79","80"],"/Users/benzah/Documents/bootcamp/gigspot/client/src/App.js",[],"/Users/benzah/Documents/bootcamp/gigspot/client/src/reportWebVitals.js",[],"/Users/benzah/Documents/bootcamp/gigspot/client/src/pages/Home.js",["81","82","83","84"],"// Node Modules\nimport { useQuery } from '@apollo/client';\nimport React, { useState, useEffect } from 'react';\n// Utilities\nimport Auth from '../utils/auth';\n// import { QUERY_USERS } from '../utils/queries';\nimport { QUERY_POSTS } from '../utils/queries';\n\n\n// Components\n\nimport UserList from '../components/UserList';\nimport Header from '../components/Header';\nimport Mission from '../components/Mission';\n\nimport SearchForm from '../components/SearchForm';\nimport SearchList from '../components/SearchList';\nimport Post from './Post';\n\nconst Home = () => {\n  // const { loading, data } = useQuery(QUERY_USERS);\n  const { loading, data } = useQuery(QUERY_POSTS);\n  const posts = data?.post || [];\n\n  const [initialPosts, setInitialPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n\n    // Set both initial and filtered from what is given back from the query (all posts)\n    useEffect(() => {\n      setInitialPosts(posts);\n      setFilteredPosts(posts);\n    }, [posts]);\n\n  return (\n    <>\n      <main>\n        {!Auth.loggedIn() ? (\n      <div>\n        <Mission />\n      </div>\n        ) : (\n        <div>\n          <SearchForm\n          posts={initialPosts}\n          setFilteredPosts={setFilteredPosts}\n          />\n\n          {loading ? (\n            <div>Loading...</div>\n          ) : (\n            <SearchList\n              posts={filteredPosts}\n            />\n          )}\n      </div>\n        )}\n    </main>\n    </>\n  );\n};\n\nexport default Home;\n","/Users/benzah/Documents/bootcamp/gigspot/client/src/pages/Signup.js",[],"/Users/benzah/Documents/bootcamp/gigspot/client/src/pages/Login.js",[],"/Users/benzah/Documents/bootcamp/gigspot/client/src/pages/Profile.js",[],"/Users/benzah/Documents/bootcamp/gigspot/client/src/pages/Post.js",["85"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { CREATE_POST } from '../utils/mutations';\n\n// import Auth from '../utils/auth';\n\nconst PostForm = () => {\n  const [formState, setFormState] = useState({\n    author: '',\n    description: '',\n    category: '',\n  });\n\n  const [createPost, { error, data }] = useMutation(CREATE_POST);\n  console.log('here', data);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await createPost({\n        variables: { ...formState },\n      })\n      console.log(data)\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  if (data) {\n    return (\n    <p>\n      Success! You may now head{' '}\n      <Link to=\"/\">back to the homepage.</Link>\n    </p>\n    )\n  } \n\n  return (\n    <main>\n      <p>Post a gig</p>\n      <form onSubmit={handleFormSubmit}>\n        <div>\n          <input\n            placeholder=\"Name...\"\n            name=\"author\"\n            value={formState.author}\n            onChange={handleChange}\n          />\n          <input\n            placeholder=\"Description...\"\n            name=\"description\"\n            value={formState.description}\n            onChange={handleChange}\n          />\n          <input\n            placeholder=\"Category...\"\n            name=\"category\"\n            value={formState.category}\n            onChange={handleChange}\n          />\n          <button type=\"submit\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </main>\n  );\n};\n\nexport default PostForm;","/Users/benzah/Documents/bootcamp/gigspot/client/src/components/Footer/index.js",[],"/Users/benzah/Documents/bootcamp/gigspot/client/src/components/Header/index.js",[],"/Users/benzah/Documents/bootcamp/gigspot/client/src/utils/queries.js",[],"/Users/benzah/Documents/bootcamp/gigspot/client/src/utils/auth.js",[],"/Users/benzah/Documents/bootcamp/gigspot/client/src/utils/mutations.js",[],"/Users/benzah/Documents/bootcamp/gigspot/client/src/components/UserList/index.js",["86"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SearchForm from '../SearchForm';\n\n// const User = ({ _id, username }) => {\n//   return (\n//     <div key={_id}>\n//       <h4>\n//         <Link to={`/users/${_id}`}>\n//           {username}\n//         </Link>\n//       </h4>\n//     </div>\n//   );\n// };\n\nconst UserList = ({ users, title }) => {\n  if (!users.length) return <h3>No Users</h3>;\n\n  return (\n    <>\n      <h3>{title}</h3>\n      <SearchForm />\n    </>\n  );\n};\n\nexport default UserList;\n","/Users/benzah/Documents/bootcamp/gigspot/client/src/components/SearchForm/index.js",["87"],"import React, { useState, useEffect } from 'react';\n\n/* \nTODO: Search by category \nTODO: Render posts by input category\nTODO: Include users and their rating\nTODO: The username is a link to their profile\nTODO: There is a button to request a booking\n*/\n\nfunction SearchForm({ posts, setFilteredPosts }) {\n  // Set state for the search result and the search query\n  const [input, setInput] = useState([]);\n\n\n  // Handler for what happens when the search form is submitted\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n    setInput(\"\");\n\n    if (input === \"\") {\n      setFilteredPosts(posts);\n      return\n    }\n\n    // Filter posts by the category that is input in the search bar\n    console.log(posts.filter(post => post.category.toLowerCase() === input.toLowerCase()))\n    setFilteredPosts(posts.filter(post => post.category.toLowerCase() === input.toLowerCase()));\n  }\n \n  return (\n    <>\n    <div className='searchBox'>\n      <h2 className='searchH2'>Find your next gig in the Carolinas!</h2>\n      <form className='searchForm'>\n        <input\n          value={input}\n          name=\"category\"\n          onChange={(event) => setInput(event.target.value)}\n          type=\"text\"\n          placeholder=\"Search\"\n        />\n      <button type=\"button\" onClick={handleFormSubmit}>\n        Submit\n      </button>\n      </form>\n      </div>\n    </>\n  );\n}\n\nexport default SearchForm;","/Users/benzah/Documents/bootcamp/gigspot/client/src/components/Mission/index.js",[],"/Users/benzah/Documents/bootcamp/gigspot/client/src/components/SearchList/index.js",["88"],"/Users/benzah/Documents/bootcamp/gigspot/client/src/components/Navbar/index.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":12,"column":8,"nodeType":"95","messageId":"96","endLine":12,"endColumn":16},{"ruleId":"93","severity":1,"message":"97","line":13,"column":8,"nodeType":"95","messageId":"96","endLine":13,"endColumn":14},{"ruleId":"93","severity":1,"message":"98","line":18,"column":8,"nodeType":"95","messageId":"96","endLine":18,"endColumn":12},{"ruleId":"99","severity":1,"message":"100","line":23,"column":9,"nodeType":"101","endLine":23,"endColumn":33},{"ruleId":"93","severity":1,"message":"102","line":15,"column":24,"nodeType":"95","messageId":"96","endLine":15,"endColumn":29},{"ruleId":"93","severity":1,"message":"103","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":14},{"ruleId":"93","severity":1,"message":"104","line":1,"column":27,"nodeType":"95","messageId":"96","endLine":1,"endColumn":36},{"ruleId":"93","severity":1,"message":"105","line":69,"column":7,"nodeType":"95","messageId":"96","endLine":69,"endColumn":17},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'UserList' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","'Post' is defined but never used.","react-hooks/exhaustive-deps","The 'posts' logical expression could make the dependencies of useEffect Hook (at line 32) change on every render. Move it inside the useEffect callback. Alternatively, wrap the initialization of 'posts' in its own useMemo() Hook.","VariableDeclarator","'error' is assigned a value but never used.","'Link' is defined but never used.","'useEffect' is defined but never used.","'StyledLink' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]