[{"C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\index.js":"1","C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\App.js":"2","C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\reportWebVitals.js":"3","C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\pages\\Home.js":"4","C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\pages\\Signup.js":"5","C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\pages\\Login.js":"6","C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\pages\\Profile.js":"7","C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\pages\\Post.js":"8","C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\components\\Header\\index.js":"9","C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\components\\Footer\\index.js":"10","C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\utils\\mutations.js":"11","C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\utils\\queries.js":"12","C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\utils\\auth.js":"13","C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\components\\Mission\\index.js":"14","C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\components\\SearchForm\\index.js":"15","C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\components\\UserList\\index.js":"16","C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\components\\SearchList\\index.js":"17","C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\components\\Navbar\\index.js":"18"},{"size":500,"mtime":1651512541132,"results":"19","hashOfConfig":"20"},{"size":1876,"mtime":1651847226394,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1651512541136,"results":"22","hashOfConfig":"20"},{"size":1499,"mtime":1651860221137,"results":"23","hashOfConfig":"20"},{"size":1866,"mtime":1651512541133,"results":"24","hashOfConfig":"20"},{"size":1811,"mtime":1651512541133,"results":"25","hashOfConfig":"20"},{"size":2243,"mtime":1651858925638,"results":"26","hashOfConfig":"20"},{"size":1754,"mtime":1651858925637,"results":"27","hashOfConfig":"20"},{"size":629,"mtime":1651847226395,"results":"28","hashOfConfig":"20"},{"size":514,"mtime":1651784018783,"results":"29","hashOfConfig":"20"},{"size":1213,"mtime":1651858925638,"results":"30","hashOfConfig":"20"},{"size":700,"mtime":1651847226398,"results":"31","hashOfConfig":"20"},{"size":1043,"mtime":1651512541136,"results":"32","hashOfConfig":"20"},{"size":1770,"mtime":1651784018784,"results":"33","hashOfConfig":"20"},{"size":1398,"mtime":1651847226395,"results":"34","hashOfConfig":"20"},{"size":520,"mtime":1651689104671,"results":"35","hashOfConfig":"20"},{"size":2083,"mtime":1651860594284,"results":"36","hashOfConfig":"20"},{"size":832,"mtime":1651784018784,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12sb8sm",{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\index.js",[],"C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\App.js",[],"C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\reportWebVitals.js",[],"C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\pages\\Home.js",["79","80","81","82","83","84"],"// Node Modules\nimport { useQuery } from '@apollo/client';\nimport React, { useState, useEffect } from 'react';\n// Utilities\nimport Auth from '../utils/auth';\n// import { QUERY_USERS } from '../utils/queries';\nimport { QUERY_POSTS } from '../utils/queries';\n\n\n// Components\n\nimport UserList from '../components/UserList';\nimport Header from '../components/Header';\nimport Mission from '../components/Mission';\n\nimport SearchForm from '../components/SearchForm';\nimport SearchList from '../components/SearchList';\nimport Post from './Post';\n\nconst Home = () => {\n  // const { loading, data } = useQuery(QUERY_USERS);\n  const { loading, data } = useQuery(QUERY_POSTS);\n  const posts = data?.post || [];\n\n  const [initialPosts, setInitialPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n\n    // Set both initial and filtered from what is given back from the query (all posts)\n    // useEffect(() => {\n    //   setInitialPosts(posts);\n    //   setFilteredPosts(posts);\n    // }, [posts]);\n\n  return (\n    <>\n      <main>\n        {!Auth.loggedIn() ? (\n      <div>\n        <Mission />\n      </div>\n        ) : (\n        <div>\n          <SearchForm\n          posts={initialPosts}\n          setFilteredPosts={setFilteredPosts}\n          />\n\n          {loading ? (\n            <div>Loading...</div>\n          ) : (\n            <SearchList\n              posts={filteredPosts}\n            />\n          )}\n      </div>\n        )}\n    </main>\n    </>\n  );\n};\n\nexport default Home;\n","C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\pages\\Signup.js",[],"C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\pages\\Login.js",[],"C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\pages\\Profile.js",[],"C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\pages\\Post.js",["85"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { CREATE_POST } from '../utils/mutations';\n\n// import Auth from '../utils/auth';\n\nconst PostForm = () => {\n  const [formState, setFormState] = useState({\n    author: '',\n    description: '',\n    category: '',\n  });\n\n  const [createPost, { error, data }] = useMutation(CREATE_POST);\n  console.log('here', data);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await createPost({\n        variables: { ...formState },\n      })\n      console.log(data)\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  if (data) {\n    return (\n    <p>\n      Success! You may now head{' '}\n      <Link to=\"/\">back to the homepage.</Link>\n    </p>\n    )\n  } \n\n  return (\n    <main>\n      <p>Post a gig</p>\n      <form onSubmit={handleFormSubmit}>\n        <div>\n          <input\n            placeholder=\"Name...\"\n            name=\"author\"\n            value={formState.author}\n            onChange={handleChange}\n          />\n          <input\n            placeholder=\"Description...\"\n            name=\"description\"\n            value={formState.description}\n            onChange={handleChange}\n          />\n          <input\n            placeholder=\"Category...\"\n            name=\"category\"\n            value={formState.category}\n            onChange={handleChange}\n          />\n          <button type=\"submit\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </main>\n  );\n};\n\nexport default PostForm;","C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\components\\Footer\\index.js",[],"C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\utils\\mutations.js",[],"C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\utils\\queries.js",[],"C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\utils\\auth.js",[],"C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\components\\Mission\\index.js",[],"C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\components\\SearchForm\\index.js",["86"],"import React, { useState, useEffect } from 'react';\n\n/* \nTODO: Search by category \nTODO: Render posts by input category\nTODO: Include users and their rating\nTODO: The username is a link to their profile\nTODO: There is a button to request a booking\n*/\n\nfunction SearchForm({ posts, setFilteredPosts }) {\n  // Set state for the search result and the search query\n  const [input, setInput] = useState([]);\n\n\n  // Handler for what happens when the search form is submitted\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n    setInput(\"\");\n\n    if (input === \"\") {\n      setFilteredPosts(posts);\n      return\n    }\n\n    // Filter posts by the category that is input in the search bar\n    console.log(posts.filter(post => post.category.toLowerCase() === input.toLowerCase()))\n    setFilteredPosts(posts.filter(post => post.category.toLowerCase() === input.toLowerCase()));\n  }\n \n  return (\n    <>\n    <div className='searchBox'>\n      <h2 className='searchH2'>Find your next gig in the Carolinas!</h2>\n      <form className='searchForm'>\n        <input\n          value={input}\n          name=\"category\"\n          onChange={(event) => setInput(event.target.value)}\n          type=\"text\"\n          placeholder=\"Search\"\n        />\n      <button type=\"button\" onClick={handleFormSubmit}>\n        Submit\n      </button>\n      </form>\n      </div>\n    </>\n  );\n}\n\nexport default SearchForm;","C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\components\\UserList\\index.js",["87"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SearchForm from '../SearchForm';\n\n// const User = ({ _id, username }) => {\n//   return (\n//     <div key={_id}>\n//       <h4>\n//         <Link to={`/users/${_id}`}>\n//           {username}\n//         </Link>\n//       </h4>\n//     </div>\n//   );\n// };\n\nconst UserList = ({ users, title }) => {\n  if (!users.length) return <h3>No Users</h3>;\n\n  return (\n    <>\n      <h3>{title}</h3>\n      <SearchForm />\n    </>\n  );\n};\n\nexport default UserList;\n","C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\components\\SearchList\\index.js",["88"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { GoLocation } from 'react-icons/go';\nimport { BsCalendarWeek } from 'react-icons/bs';\n\n\n// Put data in styling, put in button that links to user page\n// CSS grid to put them on the page\n\n// reference code\n//   <h3>\n//         {posts &&\n//           posts.map((post) => (\n//             <div key={post._id}>\n//               <Link to={`/users/${post.user?._id}`}>{post.author}</Link>\n//               <p>{post.description}</p>\n//             </div>\n//           ))}\n//       </h3>\n//     </div>\n\n\n\n\n// so user shouldn't be part of the info, but when you click the button to apply it should send to the user page...\n\n// Flex structure and container styling\nconst PostWrapper = styled.div`\ndisplay: flex;\nflex-wrap: wrap;\njustify-content: space-between;\n`;\n\nconst PostDiv = styled.div`\nheight: 100px;\nbackground: #F9F9F9;\nbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\nborder-radius: 10px;\nwidth: 445px;\nheight: 273px;\n`;\n\n\n// Post contents in order\nconst PostTitle = styled.h3`\nfont-style: normal;\nfont-weight: 400;\nfont-size: 32px;\nline-height: 42px;\ntext-align: center;\n`;\n\nconst PostLocation = styled.h4`\nfont-size: 24px;\n`;\n\nconst PostDate = styled.h4`\nfont-size: 24px;\n`;\n\nconst PostDescription = styled.p`\nfont-style: normal;\nfont-weight: 400;\nfont-size: 20px;\nline-height: 26px;\n`;\n\nconst StyledLink = styled(Link)`\n  color: palevioletred;\n  font-weight: bold;\n`;\n\n\nconst SearchList = ({ posts }) => {\n  console.log(posts);\n  if (!posts?.length) {\n    return <h2>No Posts Yet...</h2>;\n  }\n  return (\n    <div>\n      <PostWrapper>{posts &&\n        posts.map((post) => (\n          <PostDiv key={post._id}>\n            <PostTitle> This event </PostTitle>\n            <PostLocation><GoLocation />  Charlotte Location</PostLocation>\n            <PostDate><BsCalendarWeek />  Time Date</PostDate>\n            <PostDescription>{post.description}</PostDescription>\n          </PostDiv>\n        ))\n      }\n      </PostWrapper>\n    </div>\n  );\n};\n\nexport default SearchList;","C:\\Users\\carri\\Bootcamp\\Projects\\gigspot\\client\\src\\components\\Navbar\\index.js",[],{"ruleId":"89","severity":1,"message":"90","line":3,"column":27,"nodeType":"91","messageId":"92","endLine":3,"endColumn":36},{"ruleId":"89","severity":1,"message":"93","line":12,"column":8,"nodeType":"91","messageId":"92","endLine":12,"endColumn":16},{"ruleId":"89","severity":1,"message":"94","line":13,"column":8,"nodeType":"91","messageId":"92","endLine":13,"endColumn":14},{"ruleId":"89","severity":1,"message":"95","line":18,"column":8,"nodeType":"91","messageId":"92","endLine":18,"endColumn":12},{"ruleId":"89","severity":1,"message":"96","line":23,"column":9,"nodeType":"91","messageId":"92","endLine":23,"endColumn":14},{"ruleId":"89","severity":1,"message":"97","line":25,"column":24,"nodeType":"91","messageId":"92","endLine":25,"endColumn":39},{"ruleId":"89","severity":1,"message":"98","line":15,"column":24,"nodeType":"91","messageId":"92","endLine":15,"endColumn":29},{"ruleId":"89","severity":1,"message":"90","line":1,"column":27,"nodeType":"91","messageId":"92","endLine":1,"endColumn":36},{"ruleId":"89","severity":1,"message":"99","line":2,"column":10,"nodeType":"91","messageId":"92","endLine":2,"endColumn":14},{"ruleId":"89","severity":1,"message":"100","line":69,"column":7,"nodeType":"91","messageId":"92","endLine":69,"endColumn":17},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'UserList' is defined but never used.","'Header' is defined but never used.","'Post' is defined but never used.","'posts' is assigned a value but never used.","'setInitialPosts' is assigned a value but never used.","'error' is assigned a value but never used.","'Link' is defined but never used.","'StyledLink' is assigned a value but never used."]