[{"/Users/benzah/Documents/bootcamp/gigspot/client/src/index.js":"1","/Users/benzah/Documents/bootcamp/gigspot/client/src/reportWebVitals.js":"2","/Users/benzah/Documents/bootcamp/gigspot/client/src/App.js":"3","/Users/benzah/Documents/bootcamp/gigspot/client/src/pages/Apply.js":"4","/Users/benzah/Documents/bootcamp/gigspot/client/src/pages/Login.js":"5","/Users/benzah/Documents/bootcamp/gigspot/client/src/pages/Signup.js":"6","/Users/benzah/Documents/bootcamp/gigspot/client/src/pages/Profile.js":"7","/Users/benzah/Documents/bootcamp/gigspot/client/src/pages/Post.js":"8","/Users/benzah/Documents/bootcamp/gigspot/client/src/pages/Home.js":"9","/Users/benzah/Documents/bootcamp/gigspot/client/src/components/Footer/index.js":"10","/Users/benzah/Documents/bootcamp/gigspot/client/src/components/Mission/index.js":"11","/Users/benzah/Documents/bootcamp/gigspot/client/src/components/Header/index.js":"12","/Users/benzah/Documents/bootcamp/gigspot/client/src/utils/auth.js":"13","/Users/benzah/Documents/bootcamp/gigspot/client/src/utils/mutations.js":"14","/Users/benzah/Documents/bootcamp/gigspot/client/src/utils/queries.js":"15","/Users/benzah/Documents/bootcamp/gigspot/client/src/components/SearchForm/index.js":"16","/Users/benzah/Documents/bootcamp/gigspot/client/src/components/UserList/index.js":"17","/Users/benzah/Documents/bootcamp/gigspot/client/src/components/SearchList/index.js":"18","/Users/benzah/Documents/bootcamp/gigspot/client/src/components/Navbar/index.js":"19"},{"size":500,"mtime":1651511938642,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1651511938642,"results":"22","hashOfConfig":"21"},{"size":2073,"mtime":1652038902040,"results":"23","hashOfConfig":"21"},{"size":2205,"mtime":1652038902042,"results":"24","hashOfConfig":"21"},{"size":2637,"mtime":1651963778021,"results":"25","hashOfConfig":"21"},{"size":3275,"mtime":1652038902043,"results":"26","hashOfConfig":"21"},{"size":4125,"mtime":1652060536504,"results":"27","hashOfConfig":"21"},{"size":3159,"mtime":1652060536504,"results":"28","hashOfConfig":"21"},{"size":1525,"mtime":1652060536504,"results":"29","hashOfConfig":"21"},{"size":639,"mtime":1652060536503,"results":"30","hashOfConfig":"21"},{"size":1527,"mtime":1651949059176,"results":"31","hashOfConfig":"21"},{"size":670,"mtime":1651976524682,"results":"32","hashOfConfig":"21"},{"size":1043,"mtime":1651511938643,"results":"33","hashOfConfig":"21"},{"size":1679,"mtime":1652060536505,"results":"34","hashOfConfig":"21"},{"size":774,"mtime":1652060536505,"results":"35","hashOfConfig":"21"},{"size":2672,"mtime":1652060896189,"results":"36","hashOfConfig":"21"},{"size":520,"mtime":1651850589490,"results":"37","hashOfConfig":"21"},{"size":4392,"mtime":1652060536504,"results":"38","hashOfConfig":"21"},{"size":1251,"mtime":1651964748345,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ypjwyp",{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/benzah/Documents/bootcamp/gigspot/client/src/index.js",[],"/Users/benzah/Documents/bootcamp/gigspot/client/src/reportWebVitals.js",[],"/Users/benzah/Documents/bootcamp/gigspot/client/src/App.js",[],"/Users/benzah/Documents/bootcamp/gigspot/client/src/pages/Apply.js",["84"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { APPLY_GIG } from '../utils/mutations';\nimport styled from 'styled-components';\n\n// import Auth from '../utils/auth';\n\n// styled const\nconst PostWrapper = styled.div`\ndisplay: flex;\nflex-wrap: wrap;\njustify-content: space-around;\npadding: 10px;\n`;\n\nconst PostDiv = styled.div`\nbackground: #F9F9F9;\nbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\nborder-radius: 10px;\nwidth: 50%;\nheight: 50%;\npadding: 10px;\n`;\n\nconst H3 = styled.h3`\ntext-align: center;\npadding-top: 10px;\n`;\n\nconst Message = styled.textarea`\nwidth: 100%;\n  padding: 12px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  resize: vertical;\n  `;\n\nconst SubmitBtn = styled.button`\nbackground: #6EBEED;\n font-size: large;\n color: white;\n padding: 10px 20px;\n border: none;\n border-radius: 4px;\n margin-top: 10px;\n float: right;\n`;\n\nconst ApplyGig = () => {\n  const [formState, setFormState] = useState({\n    description: ''\n  });\n\n  const [applyGig, { error, data }] = useMutation(APPLY_GIG);\n  console.log('here', data);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await applyGig({\n        variables: { ...formState },\n      })\n      console.log(data)\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  if (data) {\n    return (\n    <p>\n      Success! You may now head{' '}\n      <Link to=\"/\">back to the homepage.</Link>\n    </p>\n    )\n  } \n\n  return (\n    <main>\n      <H3>Apply to Gig</H3>\n      <PostWrapper>\n        <PostDiv>\n\n      <form onSubmit={handleFormSubmit}>\n        \n        <div>\n          <Message\n            placeholder=\"Write a message here!\"\n            name=\"description\"\n            value={formState.author}\n            onChange={handleChange}\n            />\n          <SubmitBtn type=\"submit\">\n            Submit\n          </SubmitBtn>\n        </div>\n      </form>\n            </PostDiv>\n            </PostWrapper>\n    </main>\n  );\n};\n\nexport default ApplyGig;","/Users/benzah/Documents/bootcamp/gigspot/client/src/pages/Login.js",[],"/Users/benzah/Documents/bootcamp/gigspot/client/src/pages/Signup.js",[],"/Users/benzah/Documents/bootcamp/gigspot/client/src/pages/Profile.js",["85","86","87","88","89","90"],"// Node Modules\nimport React, { useState, useEffect } from \"react\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport { useMutation, useQuery } from \"@apollo/client\";\n// Utilities\nimport Auth from \"../utils/auth\";\nimport { QUERY_USERS, QUERY_USER, QUERY_ME } from \"../utils/queries\";\nimport { EDIT_USER } from \"../utils/mutations\";\n// Components\nimport UserList from \"../components/UserList\";\nimport styled from 'styled-components';\nimport SearchList from \"../components/SearchList\";\nimport { GoLocation } from 'react-icons/go';\n\n\n// styled const\nconst ProfileWrapper = styled.div`\ndisplay: flex;\nflex-wrap: wrap;\njustify-content: space-around;\npadding: 10px;\n`;\n\nconst ProfileDiv = styled.div`\nbackground: #76A7F4;\nbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\nborder-radius: 10px;\nwidth: 50%;\nheight: 50%;\npadding: 10px;\n`;\n\nconst UL = styled.ul`\nlist-style: none;\ncolor: white;\n`;\n\nconst Username = styled.li`\nfont-size: x-large;\nfont-weight: bold;\n`;\n\nconst H2 = styled.h2`\ntext-align: center;\npadding-top: 10px;\n`;\n\nconst Email = styled.li`\nfont-style: italic;\n`;\n\nconst H3 = styled.h3`\ntext-align: center;\npadding-top: 10px;\ncolor: white;\nfont-weight: lighter;\n`;\n\nconst Profile = () => {\n  const { id } = useParams();\n  const [editing, setEditing] = useState(false);\n  const [formState, setFormState] = useState({\n    username: '',\n    email: '',\n    location: '',\n    description: '',\n  })\n\n  // Get current user\n  const queryToRun = id ? QUERY_USER : QUERY_ME;\n  const { loading, error, data } = useQuery(queryToRun, {\n    variables: { userId: id },\n  });\n  // Get a list of all users\n  const { usersLoading, data: usersData } = useQuery(QUERY_USERS);\n\n  const user = data?.me || data?.user || {};\n\n  useEffect(() => {\n    setFormState({\n      username: user.username,\n      email: user.email,\n      location: user.location,\n      description: user.description,\n    })\n  }, [data]);\n\n  const [editUser, { data: userData }] = useMutation(EDIT_USER);\n\n  const users = data?.users || [];\n\n  if (error) console.log(error);\n\n  // redirect to personal profile page if username is yours\n  if (Auth.loggedIn() && Auth.getProfile().data._id === id) {\n    return <Navigate to=\"/me\" replace />;\n  }\n\n  if (loading) {\n    return <h4>Loading...</h4>;\n  }\n\n  if (id && !user?.username) {\n    console.log(user)\n    return (\n      <h4>\n        User not found!\n      </h4>\n    );\n  }\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleEditSubmit = async (event) => {\n    event.preventDefault();\n\n    console.log(formState);\n\n    try {\n      const { userData } = await editUser({\n        variables: { ...formState },\n      });\n\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const renderCurrentUserInfo = (editing, setEditing) => {\n    if (!users || !user) return <p>Not Found</p>;\n    return (\n      <>\n        <UL>\n          {editing ? <input name=\"username\" value={formState.username} onChange={handleChange}/> : <Username>{user.username}</Username>}\n          {editing ? <input name=\"email\" value={formState.email} onChange={handleChange}/> : <Email>{user.email}</Email>}\n          {editing ? <input name=\"location\" value={formState.location} onChange={handleChange}/> : <li><GoLocation /> {user.location}</li>}\n          {editing ? <input name=\"description\" value={formState.description} onChange={handleChange}/> : <li>Info: {user.description}</li>}\n        </UL>\n        {!id && !editing && <button onClick={() => setEditing(true)}>Edit Profile</button>}\n        {!id && editing && <button onClick={(event) => handleEditSubmit(event)}>Done</button>}\n        <div>\n          <H3>Your Posts:</H3>\n          {user.posts?.length > 0 && <SearchList posts={user.posts} />}\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <div>\n      <H2>Viewing {id ? `${user.username}'s` : \"your\"} profile.</H2>\n      <ProfileWrapper>\n        <ProfileDiv>\n          {renderCurrentUserInfo(editing, setEditing)}\n        </ProfileDiv>\n      </ProfileWrapper>\n    </div>\n  );\n};\n\nexport default Profile;\n","/Users/benzah/Documents/bootcamp/gigspot/client/src/pages/Post.js",["91","92","93","94"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { CREATE_POST } from '../utils/mutations';\nimport { QUERY_ME } from '../utils/queries';\nimport styled from 'styled-components';\nimport { useEffect } from 'react/cjs/react.production.min';\n\n// import Auth from '../utils/auth';\n\n// styled const\nconst PostWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  padding: 10px;\n`;\n\nconst PostDiv = styled.div`\n  background: #f9f9f9;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  border-radius: 10px;\n  width: 50%;\n  height: 50%;\n  padding: 10px;\n`;\n\nconst H3 = styled.h3`\n  text-align: center;\n  padding-top: 10px;\n`;\n\nconst NameInput = styled.input`\n  width: 100%;\n  padding: 12px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  resize: vertical;\n`;\n\nconst CatInput = styled.input`\n  width: 100%;\n  padding: 12px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  resize: vertical;\n  margin-top: 10px;\n`;\n\nconst DescInput = styled.input`\n  width: 100%;\n  padding: 12px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  resize: vertical;\n  margin-top: 10px;\n`;\n\nconst SubmitBtn = styled.button`\n  background: #6ebeed;\n  font-size: large;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 4px;\n  margin-top: 10px;\n  float: right;\n`;\n\nconst PostForm = () => {\n\n  const [createPost, { error, data }] = useMutation(CREATE_POST);\n  const { loading, error: meError, data: meData } = useQuery(QUERY_ME);\n  console.log(meData)\n\n\n  const [formState, setFormState] = useState({\n    description: '',\n    category: '',\n  });\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await createPost({\n        variables: { ...formState },\n      });\n      console.log(data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  if (data) {\n    return (\n      <p>\n        Success! You may now head <Link to=\"/\">back to the homepage.</Link>\n      </p>\n    );\n  }\n\n  return (\n    <main>\n      <H3>Post a gig</H3>\n      <PostWrapper>\n        <PostDiv>\n          <form onSubmit={handleFormSubmit}>\n            <div>\n              <NameInput\n                placeholder=\"Name...\"\n                name=\"author\"\n                value={formState.author}\n                onChange={handleChange}\n              />\n              <CatInput\n                placeholder=\"Category...\"\n                name=\"category\"\n                value={formState.category}\n                onChange={handleChange}\n              />\n              <DescInput\n                placeholder=\"Description (date, time, etc)...\"\n                name=\"description\"\n                value={formState.description}\n                onChange={handleChange}\n              />\n              <SubmitBtn type=\"submit\">Submit</SubmitBtn>\n            </div>\n          </form>\n        </PostDiv>\n      </PostWrapper>\n    </main>\n  );\n};\n\nexport default PostForm;\n","/Users/benzah/Documents/bootcamp/gigspot/client/src/pages/Home.js",["95","96","97","98"],"// Node Modules\nimport { useQuery } from \"@apollo/client\";\nimport React, { useState, useEffect } from \"react\";\n// Utilities\nimport Auth from \"../utils/auth\";\n// import { QUERY_USERS } from '../utils/queries';\nimport { QUERY_POSTS } from \"../utils/queries\";\n\n// Components\n\nimport UserList from \"../components/UserList\";\nimport Header from \"../components/Header\";\nimport Mission from \"../components/Mission\";\n\nimport SearchForm from \"../components/SearchForm\";\nimport SearchList from \"../components/SearchList\";\nimport Post from \"./Post\";\n\nconst Home = () => {\n  // const { loading, data } = useQuery(QUERY_USERS);\n  const { loading, data } = useQuery(QUERY_POSTS);\n  const posts = data?.post || [];\n  console.log('posts:', posts);\n\n  const [initialPosts, setInitialPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n\n  // Set both initial and filtered from what is given back from the query (all posts)\n  useEffect(() => {\n    setInitialPosts(posts);\n    setFilteredPosts(posts);\n  }, [posts]);\n\n\n  return (\n    <>\n      <main>\n        {!Auth.loggedIn() ? (\n          <div>\n            <Mission />\n          </div>\n        ) : (\n          <div>\n            <SearchForm\n              posts={initialPosts}\n              setFilteredPosts={setFilteredPosts}\n            />\n\n            {loading ? (\n              <div>Loading...</div>\n            ) : (\n              <SearchList posts={filteredPosts} />\n            )}\n          </div>\n        )}\n      </main>\n    </>\n  );\n};\n\nexport default Home;\n","/Users/benzah/Documents/bootcamp/gigspot/client/src/components/Footer/index.js",[],"/Users/benzah/Documents/bootcamp/gigspot/client/src/components/Mission/index.js",[],"/Users/benzah/Documents/bootcamp/gigspot/client/src/components/Header/index.js",[],"/Users/benzah/Documents/bootcamp/gigspot/client/src/utils/auth.js",[],"/Users/benzah/Documents/bootcamp/gigspot/client/src/utils/mutations.js",[],"/Users/benzah/Documents/bootcamp/gigspot/client/src/utils/queries.js",[],"/Users/benzah/Documents/bootcamp/gigspot/client/src/components/SearchForm/index.js",[],"/Users/benzah/Documents/bootcamp/gigspot/client/src/components/UserList/index.js",["99"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SearchForm from '../SearchForm';\n\n// const User = ({ _id, username }) => {\n//   return (\n//     <div key={_id}>\n//       <h4>\n//         <Link to={`/users/${_id}`}>\n//           {username}\n//         </Link>\n//       </h4>\n//     </div>\n//   );\n// };\n\nconst UserList = ({ users, title }) => {\n  if (!users.length) return <h3>No Users</h3>;\n\n  return (\n    <>\n      <h3>{title}</h3>\n      <SearchForm />\n    </>\n  );\n};\n\nexport default UserList;\n","/Users/benzah/Documents/bootcamp/gigspot/client/src/components/SearchList/index.js",["100","101","102"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { GoLocation } from \"react-icons/go\";\nimport { BsCalendarWeek } from \"react-icons/bs\";\n\nimport { REMOVE_POST } from \"../../utils/mutations\";\nimport { useMutation } from \"@apollo/client\";\n// Put data in styling, put in button that links to user page\n// CSS grid to put them on the page\n\n// reference code\n//   <h3>\n//         {posts &&\n//           posts.map((post) => (\n//             <div key={post._id}>\n//               <Link to={`/users/${post.user?._id}`}>{post.author}</Link>\n//               <p>{post.description}</p>\n//             </div>\n//           ))}\n//       </h3>\n//     </div>\n\n// so user shouldn't be part of the info, but when you click the button to apply it should send to the user page...\n\n// Flex structure and container styling\nconst PostWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin: 20px;\n  padding-bottom: 10px;\n`;\n\nconst PostDiv = styled.div`\n  height: 100px;\n  background: #f9f9f9;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  border-radius: 10px;\n  width: 445px;\n  height: 273px;\n  padding: 10px;\n  margin-bottom: 20px;\n  margin-right: 5px;\n`;\n\nconst H2 = styled.h2`\n  text-align: center;\n  padding-top: 10px;\n  padding-bottom: 10px;\n`;\n\n// Post contents in order\nconst PostTitle = styled.h3`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 32px;\n  line-height: 42px;\n  text-align: center;\n`;\n\nconst PostLocation = styled.h4`\n  font-size: 24px;\n`;\n\nconst PostDate = styled.h4`\n  font-size: 24px;\n`;\n\nconst PostDescription = styled.p`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 26px;\n`;\n\nconst StyledLink = styled(Link)`\n  color: palevioletred;\n  font-weight: bold;\n`;\n\n\nconst GigBtn = styled.button`\n  background: #6ebeed;\n  font-size: large;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 4px;\n  margin-top: 10px;\n  float: right;\n  &:focus {\n    background: white;\n    font-size: large;\n    color: #6ebeed;\n    padding: 10px 20px;\n    border: 1px solid #6ebeed;\n    border-radius: 4px;\n    margin-top: 10px;\n  }\n  `;\n  \n  \n  const SearchList = ({ posts }) => {\n    console.log(posts)\n    \n    const [removePost, { error }] = useMutation(REMOVE_POST);\n    \n    const handleDeletePost = async (postId) => {\n      console.log(postId)\n      try {\n        const response = await removePost({\n          variables: { postId: postId },\n        })\n\n        removePost(postId)\n      } catch (error) {\n        console.log(error)\n      }\n    }\n\nconst StyledButton = styled(Link)`\ntext-decoration:none;\n\n`;\n\n\n  if (!posts?.length) {\n    return <H2>No Posts Yet...</H2>;\n  }\n  return (\n    <>\n      <div className=\"wrapper\">\n        <PostWrapper>\n\n          {posts &&\n            posts.map((post) => (\n              <PostDiv key={post._id}>\n                <PostTitle>\n                  {post.user?.username && (\n                    <StyledLink to={`/users/${post.user?._id}`}>\n                      {post.user.username}\n                    </StyledLink>\n                  )}\n                  {post.author}\n                </PostTitle>\n                <PostLocation>\n                  <GoLocation /> {post.location}\n                </PostLocation>\n                <PostDate>\n                  <BsCalendarWeek /> {post.date}\n                </PostDate>\n                <PostDescription>{post.description}</PostDescription>\n                {window.location.pathname.includes(\"/me\") && <button onClick={() => handleDeletePost(post._id)}>Delete</button>}\n              </PostDiv>\n            ))}\n\n\n          {posts && posts.map((post) => (\n            <PostDiv key={post._id}>\n              <PostTitle>\n                {post.user?.username && <StyledLink to={`/users/${post.user?._id}`}>{post.user.username}</StyledLink>}\n                {post.author}\n              </PostTitle>\n              <PostLocation><GoLocation /> {post.location}</PostLocation>\n              <PostDate><BsCalendarWeek /> {post.date}</PostDate>\n              <PostDescription>{post.description}</PostDescription>\n              <StyledButton to='/apply' className='btn-gig'>Apply to Gig</StyledButton>\n            </PostDiv>\n          ))\n          }\n\n        </PostWrapper>\n        <div className=\"push\"></div>\n      </div>\n    </>\n  );\n};\n\nexport default SearchList;\n","/Users/benzah/Documents/bootcamp/gigspot/client/src/components/Navbar/index.js",[],{"ruleId":"103","severity":1,"message":"104","line":55,"column":22,"nodeType":"105","messageId":"106","endLine":55,"endColumn":27},{"ruleId":"103","severity":1,"message":"107","line":10,"column":8,"nodeType":"105","messageId":"106","endLine":10,"endColumn":16},{"ruleId":"103","severity":1,"message":"108","line":75,"column":11,"nodeType":"105","messageId":"106","endLine":75,"endColumn":23},{"ruleId":"103","severity":1,"message":"109","line":75,"column":31,"nodeType":"105","messageId":"106","endLine":75,"endColumn":40},{"ruleId":"110","severity":1,"message":"111","line":86,"column":6,"nodeType":"112","endLine":86,"endColumn":12,"suggestions":"113"},{"ruleId":"103","severity":1,"message":"114","line":88,"column":28,"nodeType":"105","messageId":"106","endLine":88,"endColumn":36},{"ruleId":"103","severity":1,"message":"114","line":127,"column":15,"nodeType":"105","messageId":"106","endLine":127,"endColumn":23},{"ruleId":"103","severity":1,"message":"115","line":7,"column":10,"nodeType":"105","messageId":"106","endLine":7,"endColumn":19},{"ruleId":"103","severity":1,"message":"104","line":72,"column":24,"nodeType":"105","messageId":"106","endLine":72,"endColumn":29},{"ruleId":"103","severity":1,"message":"116","line":73,"column":11,"nodeType":"105","messageId":"106","endLine":73,"endColumn":18},{"ruleId":"103","severity":1,"message":"117","line":73,"column":27,"nodeType":"105","messageId":"106","endLine":73,"endColumn":34},{"ruleId":"103","severity":1,"message":"107","line":11,"column":8,"nodeType":"105","messageId":"106","endLine":11,"endColumn":16},{"ruleId":"103","severity":1,"message":"118","line":12,"column":8,"nodeType":"105","messageId":"106","endLine":12,"endColumn":14},{"ruleId":"103","severity":1,"message":"119","line":17,"column":8,"nodeType":"105","messageId":"106","endLine":17,"endColumn":12},{"ruleId":"110","severity":1,"message":"120","line":22,"column":9,"nodeType":"121","endLine":22,"endColumn":33},{"ruleId":"103","severity":1,"message":"122","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":14},{"ruleId":"103","severity":1,"message":"123","line":83,"column":7,"nodeType":"105","messageId":"106","endLine":83,"endColumn":13},{"ruleId":"103","severity":1,"message":"104","line":107,"column":26,"nodeType":"105","messageId":"106","endLine":107,"endColumn":31},{"ruleId":"103","severity":1,"message":"124","line":112,"column":15,"nodeType":"105","messageId":"106","endLine":112,"endColumn":23},"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'UserList' is defined but never used.","'usersLoading' is assigned a value but never used.","'usersData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'user.description', 'user.email', 'user.location', and 'user.username'. Either include them or remove the dependency array.","ArrayExpression",["125"],"'userData' is assigned a value but never used.","'useEffect' is defined but never used.","'loading' is assigned a value but never used.","'meError' is assigned a value but never used.","'Header' is defined but never used.","'Post' is defined but never used.","The 'posts' logical expression could make the dependencies of useEffect Hook (at line 32) change on every render. To fix this, wrap the initialization of 'posts' in its own useMemo() Hook.","VariableDeclarator","'Link' is defined but never used.","'GigBtn' is assigned a value but never used.","'response' is assigned a value but never used.",{"desc":"126","fix":"127"},"Update the dependencies array to be: [data, user.description, user.email, user.location, user.username]",{"range":"128","text":"129"},[1895,1901],"[data, user.description, user.email, user.location, user.username]"]