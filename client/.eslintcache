[{"C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\index.js":"1","C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\reportWebVitals.js":"2","C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\App.js":"3","C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\pages\\Home.js":"4","C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\pages\\Login.js":"5","C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\pages\\Signup.js":"6","C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\pages\\Profile.js":"7","C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\pages\\Post.js":"8","C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\components\\Header\\index.js":"9","C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\components\\Mission\\index.js":"10","C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\components\\Footer\\index.js":"11","C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\utils\\queries.js":"12","C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\utils\\mutations.js":"13","C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\utils\\auth.js":"14","C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\components\\UserList\\index.js":"15","C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\components\\SearchForm\\index.js":"16","C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\components\\SearchList\\index.js":"17","C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\components\\Navbar\\index.js":"18"},{"size":517,"mtime":1651511701205,"results":"19","hashOfConfig":"20"},{"size":375,"mtime":1651511701209,"results":"21","hashOfConfig":"20"},{"size":2047,"mtime":1651938864245,"results":"22","hashOfConfig":"20"},{"size":1563,"mtime":1651938864249,"results":"23","hashOfConfig":"20"},{"size":2913,"mtime":1651871117772,"results":"24","hashOfConfig":"20"},{"size":3110,"mtime":1651871117778,"results":"25","hashOfConfig":"20"},{"size":3021,"mtime":1651871117776,"results":"26","hashOfConfig":"20"},{"size":3135,"mtime":1651938864251,"results":"27","hashOfConfig":"20"},{"size":691,"mtime":1651871117761,"results":"28","hashOfConfig":"20"},{"size":1812,"mtime":1651777764241,"results":"29","hashOfConfig":"20"},{"size":532,"mtime":1651871117760,"results":"30","hashOfConfig":"20"},{"size":755,"mtime":1651847239881,"results":"31","hashOfConfig":"20"},{"size":1278,"mtime":1651858965167,"results":"32","hashOfConfig":"20"},{"size":1084,"mtime":1651511701211,"results":"33","hashOfConfig":"20"},{"size":548,"mtime":1651689116075,"results":"34","hashOfConfig":"20"},{"size":2619,"mtime":1651871117765,"results":"35","hashOfConfig":"20"},{"size":2759,"mtime":1651939282568,"results":"36","hashOfConfig":"20"},{"size":1216,"mtime":1651871117763,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"e1zjiy",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\index.js",[],["80","81"],"C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\reportWebVitals.js",[],"C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\App.js",[],"C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\pages\\Home.js",["82","83","84","85","86","87"],"// Node Modules\r\nimport { useQuery } from \"@apollo/client\";\r\nimport React, { useState, useEffect } from \"react\";\r\n// Utilities\r\nimport Auth from \"../utils/auth\";\r\n// import { QUERY_USERS } from '../utils/queries';\r\nimport { QUERY_POSTS } from \"../utils/queries\";\r\n\r\n// Components\r\n\r\nimport UserList from \"../components/UserList\";\r\nimport Header from \"../components/Header\";\r\nimport Mission from \"../components/Mission\";\r\n\r\nimport SearchForm from \"../components/SearchForm\";\r\nimport SearchList from \"../components/SearchList\";\r\nimport Post from \"./Post\";\r\n\r\nconst Home = () => {\r\n  // const { loading, data } = useQuery(QUERY_USERS);\r\n  const { loading, data } = useQuery(QUERY_POSTS);\r\n  const posts = data?.post || [];\r\n\r\n  const [initialPosts, setInitialPosts] = useState([]);\r\n  const [filteredPosts, setFilteredPosts] = useState([]);\r\n\r\n  // Set both initial and filtered from what is given back from the query (all posts)\r\n  // useEffect(() => {\r\n  //   setInitialPosts(posts);\r\n  //   setFilteredPosts(posts);\r\n  // }, [posts]);\r\n\r\n  return (\r\n    <>\r\n      <main>\r\n        {!Auth.loggedIn() ? (\r\n          <div>\r\n            <Mission />\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <SearchForm\r\n              posts={initialPosts}\r\n              setFilteredPosts={setFilteredPosts}\r\n            />\r\n\r\n            {loading ? (\r\n              <div>Loading...</div>\r\n            ) : (\r\n              <SearchList posts={filteredPosts} />\r\n            )}\r\n          </div>\r\n        )}\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\pages\\Login.js",[],"C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\pages\\Signup.js",[],"C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\pages\\Profile.js",["88"],"// Node Modules\r\nimport React from \"react\";\r\nimport { Navigate, useParams } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/client\";\r\n// Utilities\r\nimport Auth from \"../utils/auth\";\r\nimport { QUERY_USERS, QUERY_USER, QUERY_ME } from \"../utils/queries\";\r\n// Components\r\nimport UserList from \"../components/UserList\";\r\nimport styled from 'styled-components';\r\nimport SearchList from \"../components/SearchList\";\r\nimport {  GoLocation } from 'react-icons/go';\r\n\r\n// styled const\r\nconst ProfileWrapper = styled.div`\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\njustify-content: space-around;\r\npadding: 10px;\r\n`;\r\n\r\nconst ProfileDiv = styled.div`\r\nbackground: #F9F9F9;\r\nbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\nborder-radius: 10px;\r\nwidth: 50%;\r\nheight: 50%;\r\npadding: 10px;\r\n`;\r\n\r\nconst UL = styled.ul`\r\nlist-style: none;\r\n`\r\n\r\nconst Username = styled.li`\r\nfont-size: x-large;\r\nfont-weight: bold;\r\n`\r\nconst H2 = styled.h2`\r\ntext-align: center;\r\npadding-top: 10px;\r\n`\r\n\r\nconst Email = styled.li`\r\nfont-style: italic;\r\n`\r\n\r\nconst Profile = () => {\r\n  const { id } = useParams();\r\n\r\n  // Get current user\r\n  const queryToRun = id ? QUERY_USER : QUERY_ME;\r\n  const { loading, error, data } = useQuery(queryToRun, {\r\n    variables: { _id: id },\r\n  });\r\n\r\n  console.log(data);\r\n  // Get a list of all users\r\n  const { usersLoading, data: usersData } = useQuery(QUERY_USERS);\r\n\r\n  const user = data?.me || data?.user || {};\r\n  console.log(data);\r\n  const users = usersData?.users || [];\r\n\r\n  if (error) console.log(error);\r\n\r\n  // redirect to personal profile page if username is yours\r\n  if (Auth.loggedIn() && Auth.getProfile().data._id === id) {\r\n    return <Navigate to=\"/me\" replace />;\r\n  }\r\n\r\n  if (loading) {\r\n    return <h4>Loading...</h4>;\r\n  }\r\n\r\n  if (id && !user?.username) {\r\n    return (\r\n      <h4>\r\n        {/* You need to be logged in to see this. Use the navigation links above to\r\n        sign up or log in! */}\r\n        User not found!\r\n      </h4>\r\n    );\r\n  }\r\n\r\n  const renderUserList = () => {\r\n    if (usersLoading) return null;\r\n    // Only renders users who's profile we're not currently viewing\r\n    const notMeUsers = users.filter((o) => o._id !== user._id);\r\n    return <UserList users={notMeUsers} title=\"User List\" />;\r\n  };\r\n\r\n  const renderCurrentUserInfo = () => {\r\n    if (id) return null;\r\n    return (\r\n      <>\r\n        <UL>\r\n          <Username>{user.username}</Username>\r\n          <Email>{user.email}</Email>\r\n          <li><GoLocation /> {user.location}</li>\r\n          <li>Info: {user.description}</li>\r\n        </UL>\r\n        <div>\r\n          <h3>Your Posts:</h3>\r\n          {user.posts?.length > 0 && <SearchList posts={user.posts} />}\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  console.log('user', user.posts);\r\n  return (\r\n    <div>\r\n      <H2>Viewing {id ? `${user.username}'s` : \"your\"} profile.</H2>\r\n    <ProfileWrapper>\r\n      <ProfileDiv>\r\n        {renderCurrentUserInfo()}\r\n      </ProfileDiv>\r\n    </ProfileWrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\pages\\Post.js",["89"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { CREATE_POST } from \"../utils/mutations\";\r\nimport styled from \"styled-components\";\r\n\r\n// import Auth from '../utils/auth';\r\n\r\n// styled const\r\nconst PostWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  padding: 10px;\r\n`;\r\n\r\nconst PostDiv = styled.div`\r\n  background: #f9f9f9;\r\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n  border-radius: 10px;\r\n  width: 50%;\r\n  height: 50%;\r\n  padding: 10px;\r\n`;\r\n\r\nconst H3 = styled.h3`\r\n  text-align: center;\r\n  padding-top: 10px;\r\n`;\r\n\r\nconst NameInput = styled.input`\r\n  width: 100%;\r\n  padding: 12px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  resize: vertical;\r\n`;\r\n\r\nconst CatInput = styled.input`\r\n  width: 100%;\r\n  padding: 12px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  resize: vertical;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst DescInput = styled.input`\r\n  width: 100%;\r\n  padding: 12px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  resize: vertical;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst SubmitBtn = styled.button`\r\n  background: #6ebeed;\r\n  font-size: large;\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  margin-top: 10px;\r\n  float: right;\r\n`;\r\n\r\nconst PostForm = () => {\r\n  const [formState, setFormState] = useState({\r\n    author: \"\",\r\n    description: \"\",\r\n    category: \"\",\r\n  });\r\n\r\n  const [createPost, { error, data }] = useMutation(CREATE_POST);\r\n  console.log(\"here\", data);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { data } = await createPost({\r\n        variables: { ...formState },\r\n      });\r\n      console.log(data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  if (data) {\r\n    return (\r\n      <p>\r\n        Success! You may now head <Link to=\"/\">back to the homepage.</Link>\r\n      </p>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <H3>Post a gig</H3>\r\n      <PostWrapper>\r\n        <PostDiv>\r\n          <form onSubmit={handleFormSubmit}>\r\n            <div>\r\n              <NameInput\r\n                placeholder=\"Name...\"\r\n                name=\"author\"\r\n                value={formState.author}\r\n                onChange={handleChange}\r\n              />\r\n              <CatInput\r\n                placeholder=\"Category...\"\r\n                name=\"category\"\r\n                value={formState.category}\r\n                onChange={handleChange}\r\n              />\r\n              <DescInput\r\n                placeholder=\"Description (date, time, etc)...\"\r\n                name=\"description\"\r\n                value={formState.description}\r\n                onChange={handleChange}\r\n              />\r\n              <SubmitBtn type=\"submit\">Submit</SubmitBtn>\r\n            </div>\r\n          </form>\r\n        </PostDiv>\r\n      </PostWrapper>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n","C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\components\\Mission\\index.js",[],"C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\components\\Footer\\index.js",[],"C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\utils\\queries.js",[],"C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\utils\\mutations.js",[],"C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\utils\\auth.js",[],"C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\components\\UserList\\index.js",["90"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SearchForm from '../SearchForm';\r\n\r\n// const User = ({ _id, username }) => {\r\n//   return (\r\n//     <div key={_id}>\r\n//       <h4>\r\n//         <Link to={`/users/${_id}`}>\r\n//           {username}\r\n//         </Link>\r\n//       </h4>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nconst UserList = ({ users, title }) => {\r\n  if (!users.length) return <h3>No Users</h3>;\r\n\r\n  return (\r\n    <>\r\n      <h3>{title}</h3>\r\n      <SearchForm />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\components\\SearchForm\\index.js",["91"],"import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// styled const\r\nconst H2 = styled.h2`\r\ntext-align: center;\r\npadding-top: 10px;\r\n`;\r\n\r\nconst H3 = styled.h3`\r\ntext-align: center;\r\npadding-bottom: 10px;\r\n`;\r\n\r\nconst SearchWrapper = styled.div`\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\njustify-content: space-around;\r\npadding: 10px;\r\n`;\r\n\r\nconst SearchDiv = styled.div`\r\nbackground: #F9F9F9;\r\nbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\nborder-radius: 10px;\r\nwidth: 50%;\r\nheight: 50%;\r\npadding: 10px;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  width: 100%;\r\n  padding: 12px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  resize: vertical;\r\n  font-size: large;\r\n`;\r\n\r\nconst SearchBtn = styled.button`\r\n  background: #6EBEED;\r\n  font-size: large;\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  margin-top: 10px;\r\n  float: right;\r\n  &:focus {\r\n    background: white;\r\n  font-size: large;\r\n  color: #6EBEED;\r\n  padding: 10px 20px;\r\n  border: 1px solid #6EBEED;\r\n  border-radius: 4px;\r\n  margin-top: 10px;\r\n  float: right;\r\n}\r\n`;\r\n\r\n/* \r\nTODO: Search by category \r\nTODO: Render posts by input category\r\nTODO: Include users and their rating\r\nTODO: The username is a link to their profile\r\nTODO: There is a button to request a booking\r\n*/\r\n\r\nfunction SearchForm({ posts, setFilteredPosts }) {\r\n  // Set state for the search result and the search query\r\n  const [input, setInput] = useState([]);\r\n\r\n\r\n  // Handler for what happens when the search form is submitted\r\n  const handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    setInput(\"\");\r\n\r\n    if (input === \"\") {\r\n      setFilteredPosts(posts);\r\n      return\r\n    }\r\n\r\n    // Filter posts by the category that is input in the search bar\r\n    console.log(posts.filter(post => post.category.toLowerCase() === input.toLowerCase()))\r\n    setFilteredPosts(posts.filter(post => post.category.toLowerCase() === input.toLowerCase()));\r\n  }\r\n \r\n  return (\r\n    <>\r\n      <H2 className='searchH2'>Find your next gig in the Carolinas!</H2>\r\n      <SearchWrapper>\r\n    <SearchDiv className='searchBox'>\r\n      <H3>I'm looking for...</H3>\r\n      <form className='searchForm'>\r\n        <SearchInput\r\n          value={input}\r\n          name=\"category\"\r\n          onChange={(event) => setInput(event.target.value)}\r\n          type=\"text\"\r\n          placeholder=\"Search\"\r\n          />\r\n      <SearchBtn type=\"button\" onClick={handleFormSubmit}>\r\n        Submit\r\n      </SearchBtn>\r\n      </form>\r\n      </SearchDiv>\r\n          </SearchWrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SearchForm;","C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\components\\SearchList\\index.js",[],"C:\\Users\\kevni\\Bootcamp\\Projects\\gigspot\\client\\src\\components\\Navbar\\index.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":3,"column":27,"nodeType":"98","messageId":"99","endLine":3,"endColumn":36},{"ruleId":"96","severity":1,"message":"100","line":11,"column":8,"nodeType":"98","messageId":"99","endLine":11,"endColumn":16},{"ruleId":"96","severity":1,"message":"101","line":12,"column":8,"nodeType":"98","messageId":"99","endLine":12,"endColumn":14},{"ruleId":"96","severity":1,"message":"102","line":17,"column":8,"nodeType":"98","messageId":"99","endLine":17,"endColumn":12},{"ruleId":"96","severity":1,"message":"103","line":22,"column":9,"nodeType":"98","messageId":"99","endLine":22,"endColumn":14},{"ruleId":"96","severity":1,"message":"104","line":24,"column":24,"nodeType":"98","messageId":"99","endLine":24,"endColumn":39},{"ruleId":"96","severity":1,"message":"105","line":86,"column":9,"nodeType":"98","messageId":"99","endLine":86,"endColumn":23},{"ruleId":"96","severity":1,"message":"106","line":75,"column":24,"nodeType":"98","messageId":"99","endLine":75,"endColumn":29},{"ruleId":"96","severity":1,"message":"107","line":2,"column":10,"nodeType":"98","messageId":"99","endLine":2,"endColumn":14},{"ruleId":"96","severity":1,"message":"97","line":1,"column":27,"nodeType":"98","messageId":"99","endLine":1,"endColumn":36},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'UserList' is defined but never used.","'Header' is defined but never used.","'Post' is defined but never used.","'posts' is assigned a value but never used.","'setInitialPosts' is assigned a value but never used.","'renderUserList' is assigned a value but never used.","'error' is assigned a value but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]